/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./ortools/linear_solver/go/linear_solver.i

package gen

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _goslice_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _goslice_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _goslice_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
typedef long long swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
extern void _wrap_Swig_free_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_gen_3ab56e6a1e0dbc49(swig_intgo arg1);
extern swig_intgo _wrap_CLP_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_GLPK_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_GLOP_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_SCIP_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_GLPK_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_CBC_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_GUROBI_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_GUROBI_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_CPLEX_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_CPLEX_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_XPRESS_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_XPRESS_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_BOP_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_SAT_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern uintptr_t _wrap_new_Solver_gen_3ab56e6a1e0dbc49(swig_type_1 arg1, swig_intgo arg2);
extern void _wrap_delete_MPSolver_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPSolver_SupportsProblemType_gen_3ab56e6a1e0dbc49(swig_intgo arg1);
extern void _wrap_MPSolver_Clear_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_MPSolver_NumVariables_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_2 _wrap_MPSolver_variables_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern uintptr_t _wrap_MPSolver_LookupVariableOrNull_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_3 arg2);
extern uintptr_t _wrap_MPSolver_MakeVar_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3, _Bool arg4, swig_type_4 arg5);
extern uintptr_t _wrap_MPSolver_MakeNumVar_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3, swig_type_5 arg4);
extern uintptr_t _wrap_MPSolver_MakeIntVar_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3, swig_type_6 arg4);
extern uintptr_t _wrap_MPSolver_MakeBoolVar_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_7 arg2);
extern swig_intgo _wrap_MPSolver_NumConstraints_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_8 _wrap_MPSolver_constraints_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern uintptr_t _wrap_MPSolver_LookupConstraintOrNull_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_9 arg2);
extern uintptr_t _wrap_MPSolver_MakeConstraint__SWIG_0_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_MPSolver_MakeConstraint__SWIG_1_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern uintptr_t _wrap_MPSolver_MakeConstraint__SWIG_2_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3, swig_type_10 arg4);
extern uintptr_t _wrap_MPSolver_MakeConstraint__SWIG_3_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_11 arg2);
extern uintptr_t _wrap_MPSolver_Objective_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_Optimal_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_Feasible_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_Infeasible_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_Unbounded_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_Abnormal_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_NotSolved_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_MPSolver_Solve__SWIG_0_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_MPSolver_Solve__SWIG_1_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2);
extern swig_type_12 _wrap_MPSolver_ComputeConstraintActivities_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPSolver_VerifySolution_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, _Bool arg3);
extern void _wrap_MPSolver_Reset_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPSolver_InterruptSolve_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPSolver_SetSolverSpecificParametersAsString_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_13 arg2);
extern swig_intgo _wrap_FREE_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_AT_LOWER_BOUND_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_AT_UPPER_BOUND_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_FIXED_VALUE_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_BASIC_MPSolver_gen_3ab56e6a1e0dbc49(void);
extern void _wrap_MPSolver_SetStartingLpBasis_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern double _wrap_MPSolver_Infinity_gen_3ab56e6a1e0dbc49(void);
extern void _wrap_MPSolver_EnableOutput_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPSolver_SuppressOutput_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_14 _wrap_MPSolver_Iterations_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_15 _wrap_MPSolver_Nodes_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPSolver_ComputeExactConditionNumber_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPSolver_SetTimeLimit_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_type_16 arg2);
extern swig_type_17 _wrap_MPSolver_WallTime_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPObjective_Clear_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPObjective_SetCoefficient_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2, double arg3);
extern double _wrap_MPObjective_GetCoefficient_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_MPObjective_SetOffset_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2);
extern double _wrap_MPObjective_Offset_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPObjective_SetOptimizationDirection_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern void _wrap_MPObjective_SetMinimization_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPObjective_SetMaximization_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPObjective_Maximization_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern _Bool _wrap_MPObjective_Minimization_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPObjective_Value_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPObjective_BestBound_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_delete_MPObjective_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_18 _wrap_MPVariable_Name_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPVariable_SetInteger_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern double _wrap_MPVariable_SolutionValue_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_MPVariable_Index_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPVariable_Lb_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPVariable_Ub_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPVariable_SetLb_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2);
extern void _wrap_MPVariable_SetUb_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2);
extern void _wrap_MPVariable_SetBounds_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3);
extern double _wrap_MPVariable_ReducedCost_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_MPVariable_BasisStatus_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_delete_MPVariable_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_type_19 _wrap_MPConstraint_Name_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPConstraint_SetCoefficient_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2, double arg3);
extern double _wrap_MPConstraint_GetCoefficient_gen_3ab56e6a1e0dbc49(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_MPConstraint_Lb_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPConstraint_Ub_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPConstraint_SetLb_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2);
extern void _wrap_MPConstraint_SetUb_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2);
extern void _wrap_MPConstraint_SetBounds_gen_3ab56e6a1e0dbc49(uintptr_t arg1, double arg2, double arg3);
extern _Bool _wrap_MPConstraint_IsLazy_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPConstraint_SetIsLazy_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern swig_intgo _wrap_MPConstraint_Index_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern double _wrap_MPConstraint_DualValue_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_MPConstraint_BasisStatus_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_delete_MPConstraint_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern swig_intgo _wrap_RELATIVE_MIP_GAP_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_PRIMAL_TOLERANCE_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_DUAL_TOLERANCE_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_PRESOLVE_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_LP_ALGORITHM_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_INCREMENTALITY_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_SCALING_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_PRESOLVE_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_PRESOLVE_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_DUAL_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_PRIMAL_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_BARRIER_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_INCREMENTALITY_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_INCREMENTALITY_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_SCALING_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_SCALING_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern double _wrap_MPSolverParameters_kDefaultRelativeMipGap_get_gen_3ab56e6a1e0dbc49(void);
extern double _wrap_MPSolverParameters_kDefaultPrimalTolerance_get_gen_3ab56e6a1e0dbc49(void);
extern double _wrap_MPSolverParameters_kDefaultDualTolerance_get_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_MPSolverParameters_kDefaultPresolve_get_gen_3ab56e6a1e0dbc49(void);
extern swig_intgo _wrap_MPSolverParameters_kDefaultIncrementality_get_gen_3ab56e6a1e0dbc49(void);
extern uintptr_t _wrap_new_MPSolverParameters_gen_3ab56e6a1e0dbc49(void);
extern void _wrap_MPSolverParameters_SetDoubleParam_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_intgo arg2, double arg3);
extern void _wrap_MPSolverParameters_SetIntegerParam_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern double _wrap_MPSolverParameters_GetDoubleParam_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_MPSolverParameters_GetIntegerParam_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_delete_MPSolverParameters_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern uintptr_t _wrap_new_MPModelExportOptions_gen_3ab56e6a1e0dbc49(void);
extern void _wrap_MPModelExportOptions_Obfuscate_set_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_MPModelExportOptions_Obfuscate_get_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPModelExportOptions_LogInvalidNames_set_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_MPModelExportOptions_LogInvalidNames_get_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPModelExportOptions_ShowUnusedVariables_set_gen_3ab56e6a1e0dbc49(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_MPModelExportOptions_ShowUnusedVariables_get_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_MPModelExportOptions_MaxLineLength_set_gen_3ab56e6a1e0dbc49(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_MPModelExportOptions_MaxLineLength_get_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
extern void _wrap_delete_MPModelExportOptions_gen_3ab56e6a1e0dbc49(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_gen_3ab56e6a1e0dbc49(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrMPSolver uintptr

func (p SwigcptrMPSolver) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPSolver) SwigIsMPSolver() {
}

type Operations_researchMPSolverOptimizationProblemType int

func _swig_getMPSolver_CLP_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CLP_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverCLP_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_CLP_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_GLPK_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLPK_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverGLPK_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_GLPK_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_GLOP_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLOP_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverGLOP_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_GLOP_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_SCIP_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_SCIP_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverSCIP_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_SCIP_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_GLPK_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GLPK_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverGLPK_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_GLPK_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_CBC_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CBC_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverCBC_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_CBC_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_GUROBI_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GUROBI_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverGUROBI_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_GUROBI_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_GUROBI_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_GUROBI_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverGUROBI_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_GUROBI_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_CPLEX_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CPLEX_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverCPLEX_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_CPLEX_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_CPLEX_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_CPLEX_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverCPLEX_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_CPLEX_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_XPRESS_LINEAR_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_XPRESS_LINEAR_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverXPRESS_LINEAR_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_XPRESS_LINEAR_PROGRAMMING_MPSolver()

func _swig_getMPSolver_XPRESS_MIXED_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_XPRESS_MIXED_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverXPRESS_MIXED_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_XPRESS_MIXED_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_BOP_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_BOP_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverBOP_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_BOP_INTEGER_PROGRAMMING_MPSolver()

func _swig_getMPSolver_SAT_INTEGER_PROGRAMMING_MPSolver() (_swig_ret Operations_researchMPSolverOptimizationProblemType) {
	var swig_r Operations_researchMPSolverOptimizationProblemType
	swig_r = (Operations_researchMPSolverOptimizationProblemType)(C._wrap_SAT_INTEGER_PROGRAMMING_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverSAT_INTEGER_PROGRAMMING Operations_researchMPSolverOptimizationProblemType = _swig_getMPSolver_SAT_INTEGER_PROGRAMMING_MPSolver()

func NewSolver(arg1 string, arg2 Operations_researchMPSolverOptimizationProblemType) (_swig_ret MPSolver) {
	var swig_r MPSolver
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MPSolver)(SwigcptrMPSolver(C._wrap_new_Solver_gen_3ab56e6a1e0dbc49(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func DeleteMPSolver(arg1 MPSolver) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPSolver_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func MPSolverSupportsProblemType(arg1 Operations_researchMPSolverOptimizationProblemType) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPSolver_SupportsProblemType_gen_3ab56e6a1e0dbc49(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Clear() {
	_swig_i_0 := arg1
	C._wrap_MPSolver_Clear_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPSolver) NumVariables() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_MPSolver_NumVariables_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Variables() (_swig_ret []MPVariable) {
	var swig_r []MPVariable
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MPSolver_variables_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]MPVariable)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrMPSolver) LookupVariableOrNull(arg2 string) (_swig_ret MPVariable) {
	var swig_r MPVariable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MPVariable)(SwigcptrMPVariable(C._wrap_MPSolver_LookupVariableOrNull_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeVar(arg2 float64, arg3 float64, arg4 bool, arg5 string) (_swig_ret MPVariable) {
	var swig_r MPVariable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (MPVariable)(SwigcptrMPVariable(C._wrap_MPSolver_MakeVar_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeNumVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret MPVariable) {
	var swig_r MPVariable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (MPVariable)(SwigcptrMPVariable(C._wrap_MPSolver_MakeNumVar_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeIntVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret MPVariable) {
	var swig_r MPVariable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (MPVariable)(SwigcptrMPVariable(C._wrap_MPSolver_MakeIntVar_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeBoolVar(arg2 string) (_swig_ret MPVariable) {
	var swig_r MPVariable
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MPVariable)(SwigcptrMPVariable(C._wrap_MPSolver_MakeBoolVar_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) NumConstraints() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_MPSolver_NumConstraints_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Constraints() (_swig_ret []MPConstraint) {
	var swig_r []MPConstraint
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MPSolver_constraints_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]MPConstraint)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrMPSolver) LookupConstraintOrNull(arg2 string) (_swig_ret MPConstraint) {
	var swig_r MPConstraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MPConstraint)(SwigcptrMPConstraint(C._wrap_MPSolver_LookupConstraintOrNull_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeConstraint__SWIG_0(arg2 float64, arg3 float64) (_swig_ret MPConstraint) {
	var swig_r MPConstraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (MPConstraint)(SwigcptrMPConstraint(C._wrap_MPSolver_MakeConstraint__SWIG_0_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeConstraint__SWIG_1() (_swig_ret MPConstraint) {
	var swig_r MPConstraint
	_swig_i_0 := arg1
	swig_r = (MPConstraint)(SwigcptrMPConstraint(C._wrap_MPSolver_MakeConstraint__SWIG_1_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeConstraint__SWIG_2(arg2 float64, arg3 float64, arg4 string) (_swig_ret MPConstraint) {
	var swig_r MPConstraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (MPConstraint)(SwigcptrMPConstraint(C._wrap_MPSolver_MakeConstraint__SWIG_2_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrMPSolver) MakeConstraint__SWIG_3(arg2 string) (_swig_ret MPConstraint) {
	var swig_r MPConstraint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MPConstraint)(SwigcptrMPConstraint(C._wrap_MPSolver_MakeConstraint__SWIG_3_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrMPSolver) MakeConstraint(a ...interface{}) MPConstraint {
	argc := len(a)
	if argc == 0 {
		return p.MakeConstraint__SWIG_1()
	}
	if argc == 1 {
		return p.MakeConstraint__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.MakeConstraint__SWIG_0(a[0].(float64), a[1].(float64))
	}
	if argc == 3 {
		return p.MakeConstraint__SWIG_2(a[0].(float64), a[1].(float64), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMPSolver) Objective() (_swig_ret MPObjective) {
	var swig_r MPObjective
	_swig_i_0 := arg1
	swig_r = (MPObjective)(SwigcptrMPObjective(C._wrap_MPSolver_Objective_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type Operations_researchMPSolverResultStatus int

func _swig_getMPSolver_Optimal_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Optimal_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverOptimal Operations_researchMPSolverResultStatus = _swig_getMPSolver_Optimal_MPSolver()

func _swig_getMPSolver_Feasible_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Feasible_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverFeasible Operations_researchMPSolverResultStatus = _swig_getMPSolver_Feasible_MPSolver()

func _swig_getMPSolver_Infeasible_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Infeasible_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverInfeasible Operations_researchMPSolverResultStatus = _swig_getMPSolver_Infeasible_MPSolver()

func _swig_getMPSolver_Unbounded_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Unbounded_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverUnbounded Operations_researchMPSolverResultStatus = _swig_getMPSolver_Unbounded_MPSolver()

func _swig_getMPSolver_Abnormal_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_Abnormal_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverAbnormal Operations_researchMPSolverResultStatus = _swig_getMPSolver_Abnormal_MPSolver()

func _swig_getMPSolver_NotSolved_MPSolver() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_NotSolved_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverNotSolved Operations_researchMPSolverResultStatus = _swig_getMPSolver_NotSolved_MPSolver()

func (arg1 SwigcptrMPSolver) Solve__SWIG_0() (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_MPSolver_Solve__SWIG_0_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Solve__SWIG_1(arg2 MPSolverParameters) (_swig_ret Operations_researchMPSolverResultStatus) {
	var swig_r Operations_researchMPSolverResultStatus
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Operations_researchMPSolverResultStatus)(C._wrap_MPSolver_Solve__SWIG_1_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrMPSolver) Solve(a ...interface{}) Operations_researchMPSolverResultStatus {
	argc := len(a)
	if argc == 0 {
		return p.Solve__SWIG_0()
	}
	if argc == 1 {
		return p.Solve__SWIG_1(a[0].(MPSolverParameters))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMPSolver) ComputeConstraintActivities() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MPSolver_ComputeConstraintActivities_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrMPSolver) VerifySolution(arg2 float64, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_MPSolver_VerifySolution_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Reset() {
	_swig_i_0 := arg1
	C._wrap_MPSolver_Reset_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPSolver) InterruptSolve() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPSolver_InterruptSolve_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) SetSolverSpecificParametersAsString(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MPSolver_SetSolverSpecificParametersAsString_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

type Operations_researchMPSolverBasisStatus int

func _swig_getMPSolver_FREE_MPSolver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_FREE_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverFREE Operations_researchMPSolverBasisStatus = _swig_getMPSolver_FREE_MPSolver()

func _swig_getMPSolver_AT_LOWER_BOUND_MPSolver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_AT_LOWER_BOUND_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverAT_LOWER_BOUND Operations_researchMPSolverBasisStatus = _swig_getMPSolver_AT_LOWER_BOUND_MPSolver()

func _swig_getMPSolver_AT_UPPER_BOUND_MPSolver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_AT_UPPER_BOUND_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverAT_UPPER_BOUND Operations_researchMPSolverBasisStatus = _swig_getMPSolver_AT_UPPER_BOUND_MPSolver()

func _swig_getMPSolver_FIXED_VALUE_MPSolver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_FIXED_VALUE_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverFIXED_VALUE Operations_researchMPSolverBasisStatus = _swig_getMPSolver_FIXED_VALUE_MPSolver()

func _swig_getMPSolver_BASIC_MPSolver() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_BASIC_MPSolver_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverBASIC Operations_researchMPSolverBasisStatus = _swig_getMPSolver_BASIC_MPSolver()

func (arg1 SwigcptrMPSolver) SetStartingLpBasis(arg2 Std_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_, arg3 Std_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_MPSolver_SetStartingLpBasis_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func MPSolverInfinity() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolver_Infinity_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func (arg1 SwigcptrMPSolver) EnableOutput() {
	_swig_i_0 := arg1
	C._wrap_MPSolver_EnableOutput_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPSolver) SuppressOutput() {
	_swig_i_0 := arg1
	C._wrap_MPSolver_SuppressOutput_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPSolver) Iterations() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_MPSolver_Iterations_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) Nodes() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_MPSolver_Nodes_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) ComputeExactConditionNumber() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPSolver_ComputeExactConditionNumber_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPSolver) SetTimeLimit(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPSolver_SetTimeLimit_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_type_16(_swig_i_1))
}

func (arg1 SwigcptrMPSolver) WallTime() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_MPSolver_WallTime_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type MPSolver interface {
	Swigcptr() uintptr
	SwigIsMPSolver()
	Clear()
	NumVariables() (_swig_ret int)
	Variables() (_swig_ret []MPVariable)
	LookupVariableOrNull(arg2 string) (_swig_ret MPVariable)
	MakeVar(arg2 float64, arg3 float64, arg4 bool, arg5 string) (_swig_ret MPVariable)
	MakeNumVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret MPVariable)
	MakeIntVar(arg2 float64, arg3 float64, arg4 string) (_swig_ret MPVariable)
	MakeBoolVar(arg2 string) (_swig_ret MPVariable)
	NumConstraints() (_swig_ret int)
	Constraints() (_swig_ret []MPConstraint)
	LookupConstraintOrNull(arg2 string) (_swig_ret MPConstraint)
	MakeConstraint(a ...interface{}) MPConstraint
	Objective() (_swig_ret MPObjective)
	Solve(a ...interface{}) Operations_researchMPSolverResultStatus
	ComputeConstraintActivities() (_swig_ret []float64)
	VerifySolution(arg2 float64, arg3 bool) (_swig_ret bool)
	Reset()
	InterruptSolve() (_swig_ret bool)
	SetSolverSpecificParametersAsString(arg2 string) (_swig_ret bool)
	SetStartingLpBasis(arg2 Std_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_, arg3 Std_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_)
	EnableOutput()
	SuppressOutput()
	Iterations() (_swig_ret int64)
	Nodes() (_swig_ret int64)
	ComputeExactConditionNumber() (_swig_ret float64)
	SetTimeLimit(arg2 int64)
	WallTime() (_swig_ret int64)
}

type SwigcptrMPObjective uintptr

func (p SwigcptrMPObjective) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPObjective) SwigIsMPObjective() {
}

func (arg1 SwigcptrMPObjective) Clear() {
	_swig_i_0 := arg1
	C._wrap_MPObjective_Clear_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPObjective) SetCoefficient(arg2 MPVariable, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_MPObjective_SetCoefficient_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPObjective) GetCoefficient(arg2 MPVariable) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_MPObjective_GetCoefficient_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrMPObjective) SetOffset(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPObjective_SetOffset_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrMPObjective) Offset() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPObjective_Offset_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPObjective) SetOptimizationDirection(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPObjective_SetOptimizationDirection_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPObjective) SetMinimization() {
	_swig_i_0 := arg1
	C._wrap_MPObjective_SetMinimization_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPObjective) SetMaximization() {
	_swig_i_0 := arg1
	C._wrap_MPObjective_SetMaximization_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMPObjective) Maximization() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPObjective_Maximization_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPObjective) Minimization() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPObjective_Minimization_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPObjective) Value() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPObjective_Value_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPObjective) BestBound() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPObjective_BestBound_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteMPObjective(arg1 MPObjective) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPObjective_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

type MPObjective interface {
	Swigcptr() uintptr
	SwigIsMPObjective()
	Clear()
	SetCoefficient(arg2 MPVariable, arg3 float64)
	GetCoefficient(arg2 MPVariable) (_swig_ret float64)
	SetOffset(arg2 float64)
	Offset() (_swig_ret float64)
	SetOptimizationDirection(arg2 bool)
	SetMinimization()
	SetMaximization()
	Maximization() (_swig_ret bool)
	Minimization() (_swig_ret bool)
	Value() (_swig_ret float64)
	BestBound() (_swig_ret float64)
}

type SwigcptrMPVariable uintptr

func (p SwigcptrMPVariable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPVariable) SwigIsMPVariable() {
}

func (arg1 SwigcptrMPVariable) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MPVariable_Name_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrMPVariable) SetInteger(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPVariable_SetInteger_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPVariable) SolutionValue() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPVariable_SolutionValue_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPVariable) Index() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_MPVariable_Index_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPVariable) Lb() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPVariable_Lb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPVariable) Ub() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPVariable_Ub_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPVariable) SetLb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPVariable_SetLb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrMPVariable) SetUb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPVariable_SetUb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrMPVariable) SetBounds(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPVariable_SetBounds_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPVariable) ReducedCost() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPVariable_ReducedCost_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPVariable) BasisStatus() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_MPVariable_BasisStatus_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteMPVariable(arg1 MPVariable) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPVariable_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

type MPVariable interface {
	Swigcptr() uintptr
	SwigIsMPVariable()
	Name() (_swig_ret string)
	SetInteger(arg2 bool)
	SolutionValue() (_swig_ret float64)
	Index() (_swig_ret int)
	Lb() (_swig_ret float64)
	Ub() (_swig_ret float64)
	SetLb(arg2 float64)
	SetUb(arg2 float64)
	SetBounds(arg2 float64, arg3 float64)
	ReducedCost() (_swig_ret float64)
	BasisStatus() (_swig_ret Operations_researchMPSolverBasisStatus)
}

type SwigcptrMPConstraint uintptr

func (p SwigcptrMPConstraint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPConstraint) SwigIsMPConstraint() {
}

func (arg1 SwigcptrMPConstraint) Name() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_MPConstraint_Name_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrMPConstraint) SetCoefficient(arg2 MPVariable, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_MPConstraint_SetCoefficient_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPConstraint) GetCoefficient(arg2 MPVariable) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_MPConstraint_GetCoefficient_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) Lb() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPConstraint_Lb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) Ub() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPConstraint_Ub_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) SetLb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPConstraint_SetLb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrMPConstraint) SetUb(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPConstraint_SetUb_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrMPConstraint) SetBounds(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPConstraint_SetBounds_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPConstraint) IsLazy() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPConstraint_IsLazy_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) SetIsLazy(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPConstraint_SetIsLazy_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPConstraint) Index() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_MPConstraint_Index_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) DualValue() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_MPConstraint_DualValue_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPConstraint) BasisStatus() (_swig_ret Operations_researchMPSolverBasisStatus) {
	var swig_r Operations_researchMPSolverBasisStatus
	_swig_i_0 := arg1
	swig_r = (Operations_researchMPSolverBasisStatus)(C._wrap_MPConstraint_BasisStatus_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteMPConstraint(arg1 MPConstraint) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPConstraint_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

type MPConstraint interface {
	Swigcptr() uintptr
	SwigIsMPConstraint()
	Name() (_swig_ret string)
	SetCoefficient(arg2 MPVariable, arg3 float64)
	GetCoefficient(arg2 MPVariable) (_swig_ret float64)
	Lb() (_swig_ret float64)
	Ub() (_swig_ret float64)
	SetLb(arg2 float64)
	SetUb(arg2 float64)
	SetBounds(arg2 float64, arg3 float64)
	IsLazy() (_swig_ret bool)
	SetIsLazy(arg2 bool)
	Index() (_swig_ret int)
	DualValue() (_swig_ret float64)
	BasisStatus() (_swig_ret Operations_researchMPSolverBasisStatus)
}

type SwigcptrMPSolverParameters uintptr

func (p SwigcptrMPSolverParameters) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPSolverParameters) SwigIsMPSolverParameters() {
}

type Operations_researchMPSolverParametersDoubleParam int

func _swig_getMPSolverParameters_RELATIVE_MIP_GAP_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_RELATIVE_MIP_GAP_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersRELATIVE_MIP_GAP Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_RELATIVE_MIP_GAP_MPSolverParameters()

func _swig_getMPSolverParameters_PRIMAL_TOLERANCE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_PRIMAL_TOLERANCE_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersPRIMAL_TOLERANCE Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_PRIMAL_TOLERANCE_MPSolverParameters()

func _swig_getMPSolverParameters_DUAL_TOLERANCE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersDoubleParam) {
	var swig_r Operations_researchMPSolverParametersDoubleParam
	swig_r = (Operations_researchMPSolverParametersDoubleParam)(C._wrap_DUAL_TOLERANCE_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersDUAL_TOLERANCE Operations_researchMPSolverParametersDoubleParam = _swig_getMPSolverParameters_DUAL_TOLERANCE_MPSolverParameters()

type Operations_researchMPSolverParametersIntegerParam int

func _swig_getMPSolverParameters_PRESOLVE_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_PRESOLVE_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersPRESOLVE Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_PRESOLVE_MPSolverParameters()

func _swig_getMPSolverParameters_LP_ALGORITHM_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_LP_ALGORITHM_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersLP_ALGORITHM Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_LP_ALGORITHM_MPSolverParameters()

func _swig_getMPSolverParameters_INCREMENTALITY_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_INCREMENTALITY_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersINCREMENTALITY Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_INCREMENTALITY_MPSolverParameters()

func _swig_getMPSolverParameters_SCALING_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIntegerParam) {
	var swig_r Operations_researchMPSolverParametersIntegerParam
	swig_r = (Operations_researchMPSolverParametersIntegerParam)(C._wrap_SCALING_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersSCALING Operations_researchMPSolverParametersIntegerParam = _swig_getMPSolverParameters_SCALING_MPSolverParameters()

type Operations_researchMPSolverParametersPresolveValues int

func _swig_getMPSolverParameters_PRESOLVE_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_PRESOLVE_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersPRESOLVE_OFF Operations_researchMPSolverParametersPresolveValues = _swig_getMPSolverParameters_PRESOLVE_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_PRESOLVE_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_PRESOLVE_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersPRESOLVE_ON Operations_researchMPSolverParametersPresolveValues = _swig_getMPSolverParameters_PRESOLVE_ON_MPSolverParameters()

type Operations_researchMPSolverParametersLpAlgorithmValues int

func _swig_getMPSolverParameters_DUAL_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_DUAL_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersDUAL Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_DUAL_MPSolverParameters()

func _swig_getMPSolverParameters_PRIMAL_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_PRIMAL_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersPRIMAL Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_PRIMAL_MPSolverParameters()

func _swig_getMPSolverParameters_BARRIER_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersLpAlgorithmValues) {
	var swig_r Operations_researchMPSolverParametersLpAlgorithmValues
	swig_r = (Operations_researchMPSolverParametersLpAlgorithmValues)(C._wrap_BARRIER_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersBARRIER Operations_researchMPSolverParametersLpAlgorithmValues = _swig_getMPSolverParameters_BARRIER_MPSolverParameters()

type Operations_researchMPSolverParametersIncrementalityValues int

func _swig_getMPSolverParameters_INCREMENTALITY_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_INCREMENTALITY_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersINCREMENTALITY_OFF Operations_researchMPSolverParametersIncrementalityValues = _swig_getMPSolverParameters_INCREMENTALITY_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_INCREMENTALITY_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_INCREMENTALITY_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersINCREMENTALITY_ON Operations_researchMPSolverParametersIncrementalityValues = _swig_getMPSolverParameters_INCREMENTALITY_ON_MPSolverParameters()

type Operations_researchMPSolverParametersScalingValues int

func _swig_getMPSolverParameters_SCALING_OFF_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersScalingValues) {
	var swig_r Operations_researchMPSolverParametersScalingValues
	swig_r = (Operations_researchMPSolverParametersScalingValues)(C._wrap_SCALING_OFF_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersSCALING_OFF Operations_researchMPSolverParametersScalingValues = _swig_getMPSolverParameters_SCALING_OFF_MPSolverParameters()

func _swig_getMPSolverParameters_SCALING_ON_MPSolverParameters() (_swig_ret Operations_researchMPSolverParametersScalingValues) {
	var swig_r Operations_researchMPSolverParametersScalingValues
	swig_r = (Operations_researchMPSolverParametersScalingValues)(C._wrap_SCALING_ON_MPSolverParameters_gen_3ab56e6a1e0dbc49())
	return swig_r
}

var MPSolverParametersSCALING_ON Operations_researchMPSolverParametersScalingValues = _swig_getMPSolverParameters_SCALING_ON_MPSolverParameters()

func GetMPSolverParametersKDefaultRelativeMipGap() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultRelativeMipGap_get_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func GetMPSolverParametersKDefaultPrimalTolerance() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultPrimalTolerance_get_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func GetMPSolverParametersKDefaultDualTolerance() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_MPSolverParameters_kDefaultDualTolerance_get_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func GetMPSolverParametersKDefaultPresolve() (_swig_ret Operations_researchMPSolverParametersPresolveValues) {
	var swig_r Operations_researchMPSolverParametersPresolveValues
	swig_r = (Operations_researchMPSolverParametersPresolveValues)(C._wrap_MPSolverParameters_kDefaultPresolve_get_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func GetMPSolverParametersKDefaultIncrementality() (_swig_ret Operations_researchMPSolverParametersIncrementalityValues) {
	var swig_r Operations_researchMPSolverParametersIncrementalityValues
	swig_r = (Operations_researchMPSolverParametersIncrementalityValues)(C._wrap_MPSolverParameters_kDefaultIncrementality_get_gen_3ab56e6a1e0dbc49())
	return swig_r
}

func NewMPSolverParameters() (_swig_ret MPSolverParameters) {
	var swig_r MPSolverParameters
	swig_r = (MPSolverParameters)(SwigcptrMPSolverParameters(C._wrap_new_MPSolverParameters_gen_3ab56e6a1e0dbc49()))
	return swig_r
}

func (arg1 SwigcptrMPSolverParameters) SetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPSolverParameters_SetDoubleParam_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrMPSolverParameters) SetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MPSolverParameters_SetIntegerParam_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (arg1 SwigcptrMPSolverParameters) GetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_MPSolverParameters_GetDoubleParam_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrMPSolverParameters) GetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_MPSolverParameters_GetIntegerParam_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func DeleteMPSolverParameters(arg1 MPSolverParameters) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPSolverParameters_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

type MPSolverParameters interface {
	Swigcptr() uintptr
	SwigIsMPSolverParameters()
	SetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam, arg3 float64)
	SetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam, arg3 int)
	GetDoubleParam(arg2 Operations_researchMPSolverParametersDoubleParam) (_swig_ret float64)
	GetIntegerParam(arg2 Operations_researchMPSolverParametersIntegerParam) (_swig_ret int)
}

type SwigcptrMPModelExportOptions uintptr

func (p SwigcptrMPModelExportOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMPModelExportOptions) SwigIsMPModelExportOptions() {
}

func NewMPModelExportOptions() (_swig_ret MPModelExportOptions) {
	var swig_r MPModelExportOptions
	swig_r = (MPModelExportOptions)(SwigcptrMPModelExportOptions(C._wrap_new_MPModelExportOptions_gen_3ab56e6a1e0dbc49()))
	return swig_r
}

func (arg1 SwigcptrMPModelExportOptions) SetObfuscate(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPModelExportOptions_Obfuscate_set_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPModelExportOptions) GetObfuscate() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPModelExportOptions_Obfuscate_get_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPModelExportOptions) SetLogInvalidNames(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPModelExportOptions_LogInvalidNames_set_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPModelExportOptions) GetLogInvalidNames() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPModelExportOptions_LogInvalidNames_get_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPModelExportOptions) SetShowUnusedVariables(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPModelExportOptions_ShowUnusedVariables_set_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrMPModelExportOptions) GetShowUnusedVariables() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MPModelExportOptions_ShowUnusedVariables_get_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMPModelExportOptions) SetMaxLineLength(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MPModelExportOptions_MaxLineLength_set_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrMPModelExportOptions) GetMaxLineLength() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_MPModelExportOptions_MaxLineLength_get_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteMPModelExportOptions(arg1 MPModelExportOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_MPModelExportOptions_gen_3ab56e6a1e0dbc49(C.uintptr_t(_swig_i_0))
}

type MPModelExportOptions interface {
	Swigcptr() uintptr
	SwigIsMPModelExportOptions()
	SetObfuscate(arg2 bool)
	GetObfuscate() (_swig_ret bool)
	SetLogInvalidNames(arg2 bool)
	GetLogInvalidNames() (_swig_ret bool)
	SetShowUnusedVariables(arg2 bool)
	GetShowUnusedVariables() (_swig_ret bool)
	SetMaxLineLength(arg2 int)
	GetMaxLineLength() (_swig_ret int)
}

type SwigcptrStd_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_ uintptr
type Std_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_enum_SS_operations_research_MPSolver_BasisStatus_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}
