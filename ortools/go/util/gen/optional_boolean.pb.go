// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ortools/util/optional_boolean.proto

package gen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A "three-way" boolean: unspecified, false or true.
//
// We don't use the value of 1 to increase the chance to catch bugs: eg. in
// python, a user may set a proto field of this type enum to a boolean value
// without type checks, if they set it to True, the proto validity code will
// catch it (because it'll be cast to 1, which is an invalid enum value).
// Note that if the user sets if to False (i.e. 0), it will be caught by the
// routing library's parameter validity check too.
type OptionalBoolean int32

const (
	OptionalBoolean_BOOL_UNSPECIFIED OptionalBoolean = 0
	OptionalBoolean_BOOL_FALSE       OptionalBoolean = 2
	OptionalBoolean_BOOL_TRUE        OptionalBoolean = 3
)

var OptionalBoolean_name = map[int32]string{
	0: "BOOL_UNSPECIFIED",
	2: "BOOL_FALSE",
	3: "BOOL_TRUE",
}

var OptionalBoolean_value = map[string]int32{
	"BOOL_UNSPECIFIED": 0,
	"BOOL_FALSE":       2,
	"BOOL_TRUE":        3,
}

func (x OptionalBoolean) String() string {
	return proto.EnumName(OptionalBoolean_name, int32(x))
}

func (OptionalBoolean) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b3efb6439a950948, []int{0}
}

func init() {
	proto.RegisterEnum("operations_research.OptionalBoolean", OptionalBoolean_name, OptionalBoolean_value)
}

func init() {
	proto.RegisterFile("ortools/util/optional_boolean.proto", fileDescriptor_b3efb6439a950948)
}

var fileDescriptor_b3efb6439a950948 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xce, 0x2f, 0x2a, 0xc9,
	0xcf, 0xcf, 0x29, 0xd6, 0x2f, 0x2d, 0xc9, 0xcc, 0xd1, 0xcf, 0x2f, 0x28, 0xc9, 0xcc, 0xcf, 0x4b,
	0xcc, 0x89, 0x4f, 0xca, 0xcf, 0xcf, 0x49, 0x4d, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0xce, 0x2f, 0x48, 0x2d, 0x4a, 0x04, 0x49, 0x15, 0xc7, 0x17, 0xa5, 0x16, 0xa7, 0x26, 0x16,
	0x25, 0x67, 0x68, 0xb9, 0x71, 0xf1, 0xfb, 0x43, 0x95, 0x3b, 0x41, 0x54, 0x0b, 0x89, 0x70, 0x09,
	0x38, 0xf9, 0xfb, 0xfb, 0xc4, 0x87, 0xfa, 0x05, 0x07, 0xb8, 0x3a, 0x7b, 0xba, 0x79, 0xba, 0xba,
	0x08, 0x30, 0x08, 0xf1, 0x71, 0x71, 0x81, 0x45, 0xdd, 0x1c, 0x7d, 0x82, 0x5d, 0x05, 0x98, 0x84,
	0x78, 0xb9, 0x38, 0xc1, 0xfc, 0x90, 0xa0, 0x50, 0x57, 0x01, 0x66, 0x27, 0x37, 0x2e, 0xf1, 0xe4,
	0xfc, 0x5c, 0xbd, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0x3d, 0xa8, 0x73, 0xf4, 0x40, 0xce, 0x09,
	0x60, 0x8c, 0x12, 0x86, 0x39, 0x2f, 0x3d, 0x1f, 0xe2, 0xc2, 0xf4, 0xd4, 0xbc, 0x55, 0x4c, 0xc2,
	0xee, 0x10, 0xc5, 0xfe, 0x45, 0x21, 0x60, 0xc5, 0xa1, 0x25, 0x99, 0x39, 0x49, 0x6c, 0x60, 0xb7,
	0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x49, 0xd6, 0x57, 0x24, 0xd2, 0x00, 0x00, 0x00,
}
